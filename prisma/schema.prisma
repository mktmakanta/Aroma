// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String     @id @default(uuid()) // Matches Supabase auth.users id
  email     String     @unique
  name      String?
  posts     Post[]
  comments  Comment[]
  likes     PostLike[]
  createdAt DateTime   @default(now())
}

model Post {
  id          String      @id @default(uuid())
  title       String
  slug        String      @unique
  content     String?
  published   Boolean     @default(false)
  authorId    String
  author      User        @relation(fields: [authorId], references: [id])
  comments    Comment[]
  categories  Category[]  @relation("PostCategories")
  tags        Tag[]       @relation("PostTags")
  likes       PostLike[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Category {
  id    String   @id @default(uuid())
  name  String   @unique
  posts Post[]   @relation("PostCategories")
}

model Tag {
  id    String   @id @default(uuid())
  name  String   @unique
  posts Post[]   @relation("PostTags")
}

model PostLike {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, postId]) // 1 like per user per post
}